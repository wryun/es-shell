Basic Installation
------------------

   Es uses the GNU configure system for configuration.  This means that
on nearly all platforms, it should just build and work fine.  To do
this, just type:

   % ./configure
   % make

   If you're building from the source repository rather than a
distribution, it won't have a generated configure file. To generate it,
you'll need to have autotools, and run:

   % libtoolize -qi
   % autoreconf

   Libtoolize -qi installs a bunch of dependencies that we'd otherwise
get from automake, except that we're not actually using automake so
we ask libtoolize to do the work.

   Es needs an ANSI compiler (or at least a compiler that respects
protoypes and provides large portions of the ANSI library).
Otherwise it should build with the basic tools available on most UNIX
platforms.  Es expects a POSIX.1-2001 compliant OS and C library.

   Es obeys the GNU configure convention of allowing you to build in
a directory different from the source directory.  To do this, just
execute configure with a path to the source.  For example:

   % /path/to/configure

   Also obeying the GNU configure convention, configure will take
arguments specifying a variety of directories.  Currently the only
relevant ones are the prefix directory (/usr/local by default); bindir,
the directory in which `es' will reside ($prefix/bin by default);
mandir, the directory that will contain the manpage ($prefix/man by
default); and datadir, the directory that will contain the es script
library ($prefix/share by default).  These are given to configure by:

   % ./configure --prefix=directory
   % ./configure --bindir=directory --mandir=directory

   Similarly, setting the `CC', `CFLAGS', and `LDFLAGS' environment
variables will cause those to be used in the Makefile.

Es Options
----------

   Es can be built to link with GNU readline.  Readline may be used by
providing the --with-readline flag to ./configure.  By default, readline
is enabled if autoconf is able to find a working readline present on the
system; to manually disable it, ./configure --without-readline.

Problems with building
----------------------

   OpenBSD requires some additional hoop-jumping to build from source.
A recently successful installation required the following commands
before ./configure.  Note that your locally installed autotool versions
may differ.

   % libtoolize -qi
   % AUTOMAKE_VERSION=1.16 AUTOCONF_VERSION=2.71 autoreconf

   In addition, OpenBSD has, by default, a very old version of readline
installed, with which ./configure will detect and attempt to link.  To
use the more up-to-date readline library available, the following is
required:

   % doas pkg_add readline  # your exact command may differ
   % ./configure --with-readline \
        READLINE_CFLAGS=-I/usr/local/include/ereadline \
        READLINE_LIBS='-L/usr/local/lib -lereadline'
